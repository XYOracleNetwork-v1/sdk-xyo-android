apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = 'network.xyo'

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jlleitschuh.gradle:ktlint-gradle:9.0.0"
    }
}

apply plugin: "org.jlleitschuh.gradle.ktlint"


Properties versionProps = new Properties()
def versionPropsFile = file('version.properties')

if (versionPropsFile.exists())
    versionProps.load(new FileInputStream(versionPropsFile))

def increment = 0

def runTasks = gradle.startParameter.taskNames

if (':xyo-android-library:assemble' in runTasks) {
    increment = 1
}

def majorVersion = 3
def minorVersion = 1
def patch = versionProps['VERSION_PATCH'].toInteger() + increment

def verString = majorVersion + '.' + minorVersion + '.' + patch

task printVersion {
    println verString
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    ndkVersion "21.3.6528147"

    versionProps['VERSION_PATCH'] = patch.toString()
    versionProps.store(versionPropsFile.newWriter(), null)    

    compileOptions {
        sourceCompatibility = 11.0
        targetCompatibility = 11.0
        kotlinOptions {
            allWarningsAsErrors = false
        }
    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        defaultPublishConfig 'release'
        versionCode = majorVersion * 100000000 + minorVersion * 1000000 + patch
        versionName majorVersion + "." + minorVersion + "." + patch
    }

    lintOptions {
        htmlReport false
        abortOnError true
        warningsAsErrors true
        disable "HardwareIds", "MissingPermission"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
    }

    packagingOptions {
        exclude 'META-INF/build.kotlin_module'
        exclude 'META-INF/atomicfu.kotlin_module'
    }

}

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/xyo-android-library-release.aar")
            groupId 'network.xyo'
            artifactId 'sdk-xyo-android'
            version verString

            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode().getAt('dependencies')[0] ?: asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    dryRun = false
    override = false
    publish = true
    pkg {
        repo = 'xyo'
        name = 'sdk-xyo-android'
        userOrg = 'xyoraclenetwork'
        licenses = ['LGPL-3.0']
        desc = 'Android Base Classes'
        vcsUrl = 'https://github.com/xyoraclenetwork/sdk-xyo-android.git'

        version {
            name = verString
            vcsTag = verString
        }
    }
    publications = ['Production']
}

ktlint {
    disabledRules = ["no-wildcard-imports"]
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.72"
    api "org.jetbrains.kotlin:kotlin-reflect:1.3.72"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.0'
    api 'network.xyo:sdk-base-android:2.1.288'
    api 'network.xyo:sdk-ble-android:3.1.1147'
    api 'network.xyo:sdk-core-kotlin:3.0.44'
    implementation 'com.snappydb:snappydb-lib:0.5.2'
    api 'org.bouncycastle:bcpkix-jdk15on:1.64'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.AbstractKotlinCompile).all { task ->
    task.kotlinOptions.freeCompilerArgs += experimentalsEnabled
}